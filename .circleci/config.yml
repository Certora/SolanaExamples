version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0

parameters:
  run_workflow_nightly:
    default: false
    type: boolean

  run_nightly_report_analyze:
    default: false
    type: boolean
  
  certora_cli_package:
    default: "certora-cli-alpha-master"
    type: string

  path_to_confs:
    default: "cvlr_by_example"
    type: string
  
  prover_version:
    default: "master"
    type: string

  platform_tools:
    default: "v1.41-certora/platform-tools-linux-x86_64.tar.bz2"
    type: string

  extra_rustflags:
    default: ""
    type: string

  rule_sanity:
    default: "basic"
    type: string

commands:
  install_conf_runner_infra:
    steps:
      - run:
          name: Install ConfRunnerInfra
          command: |
            pip3.11 install git+ssh://git@github.com/Certora/ConfRunnerInfra.git
            # If pip installs scripts into ~/.local/bin, add it to PATH:
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV
  
  install_report_analyzer:
    steps:
      - run:
          name: Install ReportAnalyzer
          command: |
            pip3.11 install git+ssh://git@github.com-reportanalysis/Certora/ReportAnalysis.git
            # If pip installs scripts into ~/.local/bin, add it to PATH:
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $BASH_ENV

  install_certora_cli:
    steps:
      - run:
          name: Install Certora CLI Package
          command: pip3.11 install << pipeline.parameters.certora_cli_package >>

  configure_aws:
    steps:
      - aws-cli/setup:
          role_arn: $CIRCLECI_OIDC_CDK_STAGING
          region: $AWS_REGION
          session_duration: '8100'

  install_solana:
    steps:
      - run:
          name: Install Solana v.18.16
          command: |
            sh -c "$(curl -sSfL https://release.anza.xyz/v1.18.16/install)"
            # Persist the updated PATH so that Solana binaries are available in later steps.
            echo 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' >> $BASH_ENV

  install_platform_tools:
    steps:
      - run:
          name: Install platform-tools
          command: |
            cd /root/.local/share/solana/install/active_release/bin/sdk/sbf
            source env.sh

  install_certora_platform_tools:
    steps:
      - run:
          name: Install Certora platform-tools
          command: |
            source ~/.profile
            export PLATFORM_TOOLS_DIR=$HOME/.cache/solana/v1.41
            mkdir $HOME/platform-tools-certora
            cd $HOME
            wget https://github.com/Certora/certora-solana-platform-tools/releases/download/<< pipeline.parameters.platform_tools >>
            tar -xvjf platform-tools-linux-x86_64.tar.bz2 -C $HOME/platform-tools-certora
            mv $PLATFORM_TOOLS_DIR/platform-tools $PLATFORM_TOOLS_DIR/platform-tools.backup
            ln -sf $HOME/platform-tools-certora $PLATFORM_TOOLS_DIR/platform-tools
            # Optionally add platform-tools to PATH if needed:
            echo 'export PATH="$HOME/platform-tools-certora:$PATH"' >> $BASH_ENV
  
  install_just:
    steps:
      - run:
          name: Install Just
          command: |
            cargo install just

  regression:
    steps:
      - run:
          name: Run Regression Tests
          command: |
            echo "PATH: $PATH"
            ls -l ~/.local/share/solana/install
            whoami
            which cargo-build-sbf
            Regression --path << pipeline.parameters.path_to_confs >> \
                      --prover_run_cmd certoraSolanaProver \
                      --prover_version << pipeline.parameters.prover_version >> \
                      --json_flags "{\"rule_sanity\": \"<< pipeline.parameters.rule_sanity >>\", \"use_per_rule_cache\": false, \"unused_summary_hard_fail\": \"on\", \"assert_autofinder_success\": true, \"group_id\": \"$CIRCLE_WORKFLOW_ID\"}" \
                      --checks Verification \
                      --send_message

jobs:
  solana_nightly:
    parameters:
      certora_ci_name:
        type: string
      invoke_analyzer:
        default: false
        type: boolean
    docker:
      - image: &cvt public.ecr.aws/certora/cvt-image:2024.10.16-4480-c8870b3
    resource_class: small
    environment:
      CERTORA_DISABLE_AUTO_CACHE: "1"
      CERTORA_CI_CLIENT: << parameters.certora_ci_name >>
    working_directory: ~/repo
    steps:
      - checkout
      - install_certora_cli
      - configure_aws
      - install_conf_runner_infra
      - install_solana
      - install_platform_tools
      - install_certora_platform_tools
      - install_just
      - regression
      - run:
          name: Trigger analyze report workflow
          command: |
            if [ "<< parameters.invoke_analyzer >>" == "true" ]; then
              curl -X POST https://circleci.com/api/v2/project/gh/Certora/SolanaExamples/pipeline \
                --header "Circle-Token: $CIRCLECI_API_TOKEN" \
                --header "content-type: application/json" \
                --data '{"branch":"main","parameters":{"run_nightly_report_analyze":true}}'
            fi
          when: always
      - store_artifacts:
          path: Report.csv
          destination: reports
      - store_test_results:
          path: ~/repo
  
  nightly_report_analyze:
    docker:
      - image: *cvt
    resource_class: small
    working_directory: ~/repo
    steps:
      - checkout
      - install_certora_cli
      - configure_aws
      - install_conf_runner_infra
      - install_report_analyzer
      - install_solana
      - install_platform_tools
      - install_certora_platform_tools
      - install_just
      - run:
          name: Run nightly report analyzer
          no_output_timeout: 5h 
          command: ReportAnalyzer --ci_client "Solana Examples Manual" --prover_run_cmd "certoraSolanaProver"
      - store_artifacts:
          path: Report.csv
          destination: reports

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - solana_nightly:
          certora_ci_name: Solana Examples Nightly
          invoke_analyzer: true
          context: aws_staging
  manual:
    when: << pipeline.parameters.run_workflow_nightly >>
    jobs:
      - solana_nightly:
          certora_ci_name: Solana Examples Manual
          invoke_analyzer: true
          context: aws_staging
  analyze-nightly:
    when: << pipeline.parameters.run_nightly_report_analyze >>
    jobs:
      - nightly_report_analyze:
          context: aws_staging